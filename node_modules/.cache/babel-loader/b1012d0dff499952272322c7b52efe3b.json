{"ast":null,"code":"import _defineProperty from \"/home/crexiz/Desktop/energyx/Smart-Brain/face-recognition/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/crexiz/Desktop/energyx/Smart-Brain/face-recognition/src/components/FaceRecognition.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropsTile from './PropsTile';\nimport Rectangle from './Rectangle';\n\nconst FaceRecognition = ({\n  imageUrl,\n  namesList,\n  faceRec,\n  Boxes,\n  imageH,\n  imageW\n}) => {\n  console.log(imageH, imageW);\n  const Draw = namesList.map((object, i) => {\n    return React.createElement(PropsTile, {\n      key: i,\n      name: namesList[i].name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    });\n  });\n  const DrawBoxes = Boxes.map((object, i) => {\n    return React.createElement(Rectangle, {\n      key: i,\n      topRow: _objectSpread({}, Boxes[i]).top_row * imageH,\n      bottomRow: imageH - _objectSpread({}, Boxes[i]).bottom_row * imageH,\n      rightCol: imageW - _objectSpread({}, Boxes[i]).right_col * imageW / 2,\n      leftCol: _objectSpread({}, Boxes[i]).left_col * imageW / 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  });\n\n  if (faceRec === false) {\n    return React.createElement(\"div\", {\n      className: \" cf flex flex-wrap justify-center ma3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"br3 w-30 pa3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"br3 shadow-1\",\n      src: imageUrl,\n      alt: \"Your Image Should Appear Here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \" flex flex-wrap w-50 pa3 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"I would guess that this is an image that could be classified by the following traits.\"), Draw));\n  } else if (faceRec === true && Boxes != null) {\n    // for(let i = 0; i<Boxes.length;i++){\n    //     console.log(Boxes[0].region_info.bounding_box.top_row)\n    //     let box = Boxes[i];\n    //     console.log(box.region_info.bounding_box.top_row);\n    // }\n    // console.log(Boxes[0].region_info.bounding_box.top_row);\n    return React.createElement(\"div\", {\n      className: \" cf flex flex-wrap justify-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"br3 w-50 absolute\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"inputimage\",\n      className: \"br3 shadow-1\",\n      src: imageUrl,\n      alt: \"Your Image Should Appear Here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), DrawBoxes));\n  }\n};\n\nexport default FaceRecognition;","map":{"version":3,"sources":["/home/crexiz/Desktop/energyx/Smart-Brain/face-recognition/src/components/FaceRecognition.js"],"names":["React","PropsTile","Rectangle","FaceRecognition","imageUrl","namesList","faceRec","Boxes","imageH","imageW","console","log","Draw","map","object","i","name","DrawBoxes","top_row","bottom_row","right_col","left_col"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAIA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,SAAX;AAAsBC,EAAAA,OAAtB;AAA+BC,EAAAA,KAA/B;AAAsCC,EAAAA,MAAtC;AAA8CC,EAAAA;AAA9C,CAAD,KAA2D;AAC/EC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAoBC,MAApB;AACA,QAAMG,IAAI,GAAGP,SAAS,CAACQ,GAAV,CAAc,CAACC,MAAD,EAAUC,CAAV,KAAgB;AACvC,WAAO,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,CAAhB;AAAmB,MAAA,IAAI,EAAEV,SAAS,CAACU,CAAD,CAAT,CAAaC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFY,CAAb;AAIA,QAAMC,SAAS,GAAGV,KAAK,CAACM,GAAN,CAAU,CAACC,MAAD,EAASC,CAAT,KAAc;AACtC,WAAM,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,CAAhB;AAAmB,MAAA,MAAM,EAAE,kBAAIR,KAAK,CAACQ,CAAD,CAAT,EAAcG,OAAd,GAAwBV,MAAnD;AACN,MAAA,SAAS,EAAEA,MAAM,GAAI,kBAAID,KAAK,CAACQ,CAAD,CAAT,EAAcI,UAAd,GAA2BX,MAD1C;AAEN,MAAA,QAAQ,EAAEC,MAAM,GAAI,kBAAIF,KAAK,CAACQ,CAAD,CAAT,EAAcK,SAAd,GAA0BX,MAA1B,GAAiC,CAF/C;AAGN,MAAA,OAAO,EAAE,kBAAIF,KAAK,CAACQ,CAAD,CAAT,EAAcM,QAAd,GAAyBZ,MAAzB,GAAgC,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN;AAIH,GALiB,CAAlB;;AAOA,MAAGH,OAAO,KAAK,KAAf,EAAqB;AACjB,WACA;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAEF,QAAnC;AAA6C,MAAA,GAAG,EAAC,+BAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,EAOI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FADJ,EAEKQ,IAFL,CAPJ,CADA;AAaF,GAdF,MAgBK,IAAGN,OAAO,KAAK,IAAZ,IAAoBC,KAAK,IAAI,IAAhC,EAAqC;AACtC;AACA;AACA;AACA;AACA;AACA;AAGA,WACI;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,YAAR;AAAqB,MAAA,SAAS,EAAC,cAA/B;AAA8C,MAAA,GAAG,EAAEH,QAAnD;AAA6D,MAAA,GAAG,EAAC,+BAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKa,SAFL,CADJ,CADJ;AASH;AACA,CAhDL;;AAmDA,eAAed,eAAf","sourcesContent":["import React from 'react';\nimport PropsTile from './PropsTile'\nimport Rectangle from './Rectangle'\n\n\n\nconst FaceRecognition = ({imageUrl, namesList, faceRec, Boxes, imageH, imageW}) => {\n    console.log(imageH, imageW);\n    const Draw = namesList.map((object , i) => {\n        return <PropsTile key={i} name={namesList[i].name}/>\n    });\n\n    const DrawBoxes = Boxes.map((object, i) =>{\n        return<Rectangle key={i} topRow={{...Boxes[i]}.top_row * imageH } \n        bottomRow={imageH - ({...Boxes[i]}.bottom_row * imageH)} \n        rightCol={imageW - ({...Boxes[i]}.right_col * imageW/2)} \n        leftCol={{...Boxes[i]}.left_col * imageW/2}/>\n    });\n\n    if(faceRec === false){\n        return(\n        <div className=' cf flex flex-wrap justify-center ma3'>\n            \n            <div className='br3 w-30 pa3'>\n                <img className='br3 shadow-1' src={imageUrl} alt='Your Image Should Appear Here' />\n                \n                \n            </div>\n            <div className=' flex flex-wrap w-50 pa3 '>\n                <div>I would guess that this is an image that could be classified by the following traits.</div>\n                {Draw}\n            </div>\n        </div>\n    )}\n    \n    else if(faceRec === true && Boxes != null){\n        // for(let i = 0; i<Boxes.length;i++){\n        //     console.log(Boxes[0].region_info.bounding_box.top_row)\n        //     let box = Boxes[i];\n        //     console.log(box.region_info.bounding_box.top_row);\n        // }\n        // console.log(Boxes[0].region_info.bounding_box.top_row);\n        \n\n        return(\n            <div className=' cf flex flex-wrap justify-center'>\n                <div className='br3 w-50 absolute'>\n                    <img id='inputimage' className='br3 shadow-1' src={imageUrl} alt='Your Image Should Appear Here' />\n                    {DrawBoxes}\n                    {/* <div className='absolute shadow-1 flex flex-wrap justify-center' style={{top: Boxes.topRow}}></div> */}\n                </div>\n            </div>\n        );\n    }\n    };\n\n\nexport default FaceRecognition;"]},"metadata":{},"sourceType":"module"}