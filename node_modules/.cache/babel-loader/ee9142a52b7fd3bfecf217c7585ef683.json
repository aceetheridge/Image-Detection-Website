{"ast":null,"code":"var _jsxFileName = \"/home/crexiz/Desktop/energyx/Smart-Brain/face-recognition/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport NavigationBar from './components/Navigation';\nimport ImageLink from './components/ImageLink';\nimport Rank from './components/Rank';\nimport FaceRecognition from './components/FaceRecognition';\nimport 'tachyons';\nimport Clarifai from 'clarifai';\nconst AI = new Clarifai.App({\n  apiKey: 'c94246448a1b46a89010cd39ad198241'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      let boxList = [];\n      const image = document.getElementById('inputimage');\n\n      for (let i = 0; i < data.outputs[0].data.regions.length; i++) {\n        boxList.push(data.outputs[0].data.regions[i].region_info.bounding_box);\n      }\n\n      return boxList;\n    };\n\n    this.dispFace = data => {\n      this.setState({\n        Boxes: data\n      });\n    };\n\n    this.onImageLinkChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      AI.models.initModel({\n        id: Clarifai.GENERAL_MODEL,\n        version: \"aa7f35c01e0642fda5cf400f543e7c40\"\n      }).then(generalModel => {\n        return generalModel.predict(this.state.input);\n      }).then(response => {\n        var concepts = response['outputs'][0]['data']['concepts'];\n        let returnObjects = [];\n        let face = 0;\n\n        for (var i = 0; i < concepts.length; i++) {\n          returnObjects.push(concepts[i]);\n\n          if (concepts[i].name === \"face\" || concepts[i].name === \"man\" || concepts[i].name === \"woman\") {\n            face = face + 1;\n          }\n        }\n\n        ;\n        AI.models.predict(\"a403429f2ddf4b49b307e318f00e528b\", this.state.input).then(response => {\n          this.dispFace(this.calculateFaceLocation(response));\n        }, err => {\n          console.log(err);\n        });\n        this.setState({\n          namesList: returnObjects\n        });\n\n        if (face > 0) {\n          this.setState({\n            faceRec: true\n          });\n        } else if (face === 0) {\n          this.setState({\n            faceRec: false\n          });\n        }\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      namesList: [],\n      faceRec: false,\n      Boxes: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(NavigationBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(ImageLink, {\n      onImageLinkChange: this.onImageLinkChange,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      imageUrl: this.state.imageUrl,\n      namesList: this.state.namesList,\n      faceRec: this.state.faceRec,\n      Boxes: this.state.Boxes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/crexiz/Desktop/energyx/Smart-Brain/face-recognition/src/App.js"],"names":["React","Component","NavigationBar","ImageLink","Rank","FaceRecognition","Clarifai","AI","App","apiKey","constructor","calculateFaceLocation","data","boxList","image","document","getElementById","i","outputs","regions","length","push","region_info","bounding_box","dispFace","setState","Boxes","onImageLinkChange","event","input","target","value","onSubmit","imageUrl","state","models","initModel","id","GENERAL_MODEL","version","then","generalModel","predict","response","concepts","returnObjects","face","name","err","console","log","namesList","faceRec","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport NavigationBar  from './components/Navigation';\nimport ImageLink  from './components/ImageLink';\nimport Rank from './components/Rank';\nimport FaceRecognition from './components/FaceRecognition';\nimport 'tachyons';\nimport Clarifai from 'clarifai';\nconst AI = new Clarifai.App({apiKey: 'c94246448a1b46a89010cd39ad198241'});\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      namesList: [],\n      faceRec: false,\n      Boxes: []\n    }\n  }\n\n  calculateFaceLocation = (data) =>{\n    let boxList = [];\n    const image = document.getElementById('inputimage');\n    for(let i = 0; i < data.outputs[0].data.regions.length;i++){\n      boxList.push(data.outputs[0].data.regions[i].region_info.bounding_box);\n    }\n    return boxList;\n  };\n  \n  dispFace = (data)=>{\n    this.setState({Boxes: data})\n    };\n    \n\n  \n  onImageLinkChange = ( event ) => {\n    this.setState({input: event.target.value});\n  }\n  onSubmit =() =>{\n    this.setState({imageUrl: this.state.input})\n    AI.models.initModel({id: Clarifai.GENERAL_MODEL, version: \"aa7f35c01e0642fda5cf400f543e7c40\"})\n      .then(generalModel => {\n        return generalModel.predict(this.state.input);\n      })\n      .then(response => {\n        var concepts = response['outputs'][0]['data']['concepts'];\n        let returnObjects = [];\n        let face = 0;\n        for(var i = 0; i< concepts.length;i++){\n          returnObjects.push(concepts[i]);\n          \n          if(concepts[i].name === \"face\" || concepts[i].name === \"man\" || concepts[i].name === \"woman\" ){\n             face = face + 1;\n          }\n          \n        };\n        AI.models.predict(\"a403429f2ddf4b49b307e318f00e528b\", this.state.input).then(response => {this.dispFace(this.calculateFaceLocation(response))},(err => {console.log(err)}));\n        this.setState({namesList: returnObjects})\n        if(face > 0){\n            \n          this.setState({faceRec: true})\n        }\n        else if(face === 0){\n          this.setState({faceRec: false})\n        }\n      });\n      \n    \n    \n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <NavigationBar />\n        <Rank />\n        <ImageLink onImageLinkChange={this.onImageLinkChange} onSubmit={this.onSubmit}/>\n        <FaceRecognition imageUrl={this.state.imageUrl} namesList={this.state.namesList} \n          faceRec={this.state.faceRec} Boxes={this.state.Boxes}/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}